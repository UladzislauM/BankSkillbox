<Window x:Class="Bank.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:notifications="clr-namespace:Bank"
        d:DataContext="{d:DesignInstance Type=notifications:BankViewModel}"
        mc:Ignorable="d"
        Title="Bank" 
        MaxHeight="450" 
        MinHeight="450"
        MaxWidth="1000"
        MinWidth="1000">
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="Open json" 
                          Command="{Binding ExecuteOpenJson}"/>
                <MenuItem Header="Save json"
                          Command="{Binding ExecuteSaveJson}"/>
                <Separator/>
                <MenuItem Header="Save to DB"
                          Command="{Binding ExecuteSaveAllDataToDb}"/>
                <MenuItem Header="Load from DB"
                          Command="{Binding ExecuteLoadAllDataFromDb}"/>
                <Separator/>
                <MenuItem Header="Clear data"
                          Command="{Binding ExecuteClearAllData}"/>
                <Separator/>
                <MenuItem Header="Exit"
                          Command="{Binding }"/>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="Help"/>
            </MenuItem>
        </Menu>

        <StatusBar DockPanel.Dock="Bottom">

        </StatusBar>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height = "*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width = "11*"/>
                <ColumnDefinition Width="11*"/>
                <ColumnDefinition Width="978*"/>
            </Grid.ColumnDefinitions>

            <WrapPanel Margin="300,44,420,6"
                       Width="300"
                       Grid.Column="2">
                <Button Command="{Binding ViewAllClientsCommand}" 
                       Content="All clients"
                        Width="230"
                        Margin="5,10,5,5"/>
                <Button Command="{Binding ViewAllScoresCommand}" 
                       Content="All clients and scores"
                        Width="230"
                        Margin="5,5,5,10"/>
                <Border BorderBrush="Black"
                        BorderThickness="1">
                    <WrapPanel>

                        <TextBox Text="General clients"
                         Width="230"
                         HorizontalContentAlignment="Center"
                         Margin="5"/>
                        <Button Command="{Binding ViewGeneralClientsCommand}" 
                       Content="All general clients"
                        Width="110"
                        Margin="5,5,5,5"/>
                        <Button Command="{Binding ViewGeneralCreditsCommand}" 
                       Content="All general credits"
                        Width="110"
                        Margin="5,5,5,5"/>
                        <Button Command="{Binding ViewGeneralDepositsCommand}" 
                       Content="All general deposits"
                        Width="110"
                        Margin="5,5,5,5"/>
                        <Button Command="{Binding ViewGeneralScoresCommand}" 
                       Content="All general scores"
                        Width="110"
                        Margin="5,5,5,5"/>

                    </WrapPanel>
                </Border>
                <Border BorderBrush="Black"
                        BorderThickness="1">
                    <WrapPanel>

                        <TextBox Text="Corporative clients"
                        Width="230"
                        HorizontalContentAlignment="Center"
                        Margin="5"/>
                        <Button Command="{Binding ViewCorpClientsCommand}" 
                        Content="All corporative clients"
                         Width="110"
                         Margin="5,5,5,5"/>
                        <Button Command="{Binding ViewCorpCreditsCommand}" 
                        Content="All corporative credits"
                         Width="110"
                         Margin="5,5,5,5"/>
                        <Button Command="{Binding ViewCorpDepositsCommand}" 
                        Content="All corporative deposits"
                        Width="110"
                        Margin="5,5,5,5"/>
                        <Button Command="{Binding ViewCorpScoresCommand}" 
                        Content="All corporative scores"
                        Width="110" 
                        Margin="5,5,5,5"/>

                    </WrapPanel>
                </Border>
                <Border Background="Black"
                        BorderBrush="Aqua"
                        BorderThickness="1">
                    <WrapPanel>

                        <TextBox Text="VIP clients"
                        Width="230"
                        HorizontalContentAlignment="Center"
                        Margin="5"/>
                        <Button Command="{Binding ViewVIPClientsCommand}" 
                        Content="All VIP clients"
                         Width="110"
                         Margin="5,5,5,5"/>
                        <Button Command="{Binding ViewVIPCreditsCommand}" 
                        Content="All VIP credits"
                         Width="110"
                         Margin="5,5,5,5"/>
                        <Button Command="{Binding ViewVIPDepositsCommand}" 
                        Content="All VIP deposits"
                        Width="110"
                        Margin="5,5,5,5"/>
                        <Button Command="{Binding ViewVIPScoresCommand}" 
                        Content="All VIP scores"
                        Width="110" 
                        Margin="5,5,5,5"/>

                    </WrapPanel>
                </Border>
            </WrapPanel>

            <DataGrid ItemsSource="{Binding Clients}"
                      AutoGenerateColumns="False" 
                      Margin="10,41,682,3" 
                      CanUserSortColumns="True" 
                      Grid.ColumnSpan="3">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Path = Id, UpdateSourceTrigger=PropertyChanged}"
                                    Header="№ кл." 
                                    Width="45"
                                    IsReadOnly="True"/>
                    <DataGridTextColumn Binding ="{Binding Path = FirstName, UpdateSourceTrigger=PropertyChanged}" 
                                    Header="Имя" 
                                    Width="90"/>
                    <DataGridTextColumn Binding="{Binding Path = LastName, UpdateSourceTrigger=PropertyChanged}"
                                    Header="Фамилия" 
                                    Width="90"/>
                    <DataGridTextColumn Binding="{Binding Path = Status, UpdateSourceTrigger=PropertyChanged}"
                                    Header="Статус" 
                                    Width="90"/>
                </DataGrid.Columns>
            </DataGrid>

            <DataGrid ItemsSource="{Binding Scores}"
                      AutoGenerateColumns="False" 
                      Margin="560,43,130,6" 
                      CanUserSortColumns="True"
                      Grid.Column="2">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Path = Id, UpdateSourceTrigger=PropertyChanged}"
                                    Header="№ сч." 
                                    Width="45"
                                    IsReadOnly="True"/>
                    <DataGridTextColumn Binding = "{Binding Path = ScoreType, UpdateSourceTrigger=PropertyChanged}"
                                    Header="Тип сч."
                                    Width="50"
                                    IsReadOnly="True"/>
                    <DataGridTextColumn Binding = "{Binding Path = Balance, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:F2}}"
                                    Header="Баланс"
                                    Width="50"
                                    IsReadOnly="True"/>
                    <DataGridTextColumn Binding = "{Binding Path = Deadline, UpdateSourceTrigger=PropertyChanged}"
                                    Header="Срок дейст."
                                    Width="80"
                                    IsReadOnly="True"/>
                    <DataGridTextColumn Binding = "{Binding Path = IsCapitalization, UpdateSourceTrigger=PropertyChanged}"
                                    Header="Капитализ."
                                    Width="80"
                                    IsReadOnly="True"/>
                </DataGrid.Columns>
            </DataGrid>

            <Button Content="Add client"
                HorizontalAlignment="Left" 
                Margin="10,10,0,0"
                VerticalAlignment="Top"
                Width="120"
                Command="{Binding AddNewClientCommand}"
                Grid.ColumnSpan="3"/>
            <Button Content="Add score"
                HorizontalAlignment="Left" 
                Margin="113,10,0,0"
                VerticalAlignment="Top"
                Width="120"
                Command="{Binding AddNewScoreCommand}"
                Grid.Column="2"/>
            <Button x:Name="Send_Money_Button"
                Content="Send money"
                HorizontalAlignment="Left" 
                Margin="238,10,0,0"
                VerticalAlignment="Top"
                Width="120"
                Command="{Binding SendMoneyCommand}"
                Grid.Column="2"/>
            <Button Content="Проверка Срока выплаты"
                x:Name="buttonTest"
                HorizontalAlignment="Left" 
                Margin="363,10,0,0"
                VerticalAlignment="Top"
                Width="155"
                Click="Button_Click_TestDep" 
                Grid.Column="2"/>
            <Button Content="Сохранить в json"
                HorizontalAlignment="Left" 
                Margin="845,10,0,0"
                VerticalAlignment="Top"
                Width="117"
                Command="{Binding ExecuteSaveJson}" 
                Grid.Column="2"/>
            <Button Content="Загрузить json"
                HorizontalAlignment="Left" 
                Margin="845,34,0,0"
                VerticalAlignment="Top"
                Width="117"
                Command="{Binding ExecuteOpenJson}"
                Grid.Column="2"/>
            <Button Content="Загрузить из БД"
                HorizontalAlignment="Left" 
                Margin="845,98,0,0"
                VerticalAlignment="Top"
                Width="117"
                Grid.Column="2"
                Command="{Binding ExecuteLoadAllDataFromDb}"/>
            <Button Content="Сохранить в БД"
                HorizontalAlignment="Left" 
                Margin="845,123,0,0"
                VerticalAlignment="Top"
                Width="117"
                Grid.Column="2"
                Command="{Binding ExecuteSaveAllDataToDb}"/>
            <Button Content="Очистить"
                HorizontalAlignment="Left" 
                Margin="845,162,0,0"
                VerticalAlignment="Top"
                Width="117"
                Grid.Column="2"
                Command="{Binding ExecuteClearAllData}"/>
            <!--Message block-->
            <ItemsControl Margin="277,98,408,108"
                ItemsSource="{Binding ErrorBankViewModel}"
                Background="White"
                Grid.Column="2"
                BorderBrush="Black"
                BorderThickness="2">
                <TextBlock Text="{Binding ErrorBankViewModel.ErrorMessage}"
                           TextWrapping="Wrap"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Top"
                           Width="250"
                           Height="120"
                           Margin="10"/>
                <Button Content="OK" 
                        Command="{Binding ErrorBankViewModel.ExecuteVisibalBlock}"
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Bottom" 
                        MinWidth="100" 
                        MinHeight="30" 
                        Margin="10,5,5,10"/>
                <ItemsControl.Style>
                    <Style TargetType="ItemsControl">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ErrorBankViewModel.ErrorMessage}" 
                                         Value="{x:Null}">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ErrorBankViewModel.ErrorMessage}" 
                                         Value="">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.Style>
            </ItemsControl>
            <!--Add client settings-->
            <ItemsControl Margin="10,50,670,180"
                Background="White"
                Grid.Column="2"
                BorderThickness="2"
                ItemsSource="{Binding CreateClientViewModel}"
                BorderBrush="Black">
                <WrapPanel>
                    <TextBlock Text="Add new client"
                           TextAlignment="Center"
                         Width="250"
                         Height="22"
                         Margin="5"/>
                    <ComboBox Height="22"
                          Width="150"
                          Margin="5,0,5,0"
                          HorizontalAlignment="Left"
                          ItemsSource="{Binding CreateClientViewModel.Parameteres}"
                          SelectedItem="{Binding CreateClientViewModel.Parameter}"/>
                    <TextBlock Text="Client type"
                         TextWrapping="Wrap"
                         HorizontalAlignment="Left"
                         Width="100"
                         Height="22"
                         Margin="5,0,5,0"/>
                    <TextBox TextWrapping="Wrap"
                         HorizontalContentAlignment="Left"
                         HorizontalAlignment="Left"
                         Width="150"
                         Height="22"
                         Text="{Binding CreateClientViewModel.FirstName}"
                         Margin="5"/>
                    <TextBlock Text="First name"
                         TextWrapping="Wrap"
                         HorizontalAlignment="Left"
                         Width="100"
                         Height="22"
                         Margin="5,0,5,0"/>
                    <TextBox TextWrapping="Wrap"
                         HorizontalContentAlignment="Left"
                         HorizontalAlignment="Left"
                         Width="150"
                         Height="22"
                         Text="{Binding CreateClientViewModel.LastName}"
                         Margin="5,0,5,0"/>
                    <TextBlock Text="Last name"
                         TextWrapping="Wrap"
                         HorizontalAlignment="Left"
                         Width="100"
                         Height="22"
                         Margin="5,0,5,0"/>
                    <Button Content="OK" 
                        Command="{Binding CreateClientViewModel.CreateNewEntityCommand}"
                        HorizontalAlignment="Right" 
                        VerticalAlignment="Bottom" 
                        MinWidth="100" 
                        MinHeight="30" 
                        Margin="10,15,5,10"/>
                    <Button Content="Cancel" 
                        Command="{Binding CreateClientViewModel.CancelCommand}"
                        HorizontalAlignment="Right" 
                        VerticalAlignment="Bottom" 
                        MinWidth="100" 
                        MinHeight="30" 
                        Margin="10,15,5,10"/>
                </WrapPanel>
                <ItemsControl.Style>
                    <Style TargetType="ItemsControl">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CreateClientViewModel.IsActive}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CreateClientViewModel.IsActive}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.Style>
            </ItemsControl>
            <!--Add score settings-->
            <ItemsControl Margin="10,50,670,130"
                Background="White"
                Grid.Column="2"
                BorderThickness="2"
                ItemsSource="{Binding CreateScoreViewModel}"
                BorderBrush="Black">
                <WrapPanel>
                    <TextBlock Text="Add new score"
                           TextAlignment="Center"
                         Width="250"
                         Height="22"
                         Margin="5"/>
                    <ComboBox Height="22"
                          Width="150"
                          Margin="5,0,5,5"
                          HorizontalAlignment="Left"
                          ItemsSource="{Binding CreateScoreViewModel.Clients}"
                          SelectedItem="{Binding CreateScoreViewModel.SelectedClient}"/>
                    <TextBlock Text="Client"
                         TextWrapping="Wrap"
                         HorizontalAlignment="Left"
                         Width="100"
                         Height="22"
                         Margin="5,0,5,5"/>
                    <ComboBox Height="22"
                          Width="150"
                          Margin="5,0,5,0"
                          HorizontalAlignment="Left"
                          ItemsSource="{Binding CreateScoreViewModel.Parameteres}"
                          SelectedItem="{Binding CreateScoreViewModel.Parameter}"/>
                    <TextBlock Text="Score type"
                         TextWrapping="Wrap"
                         HorizontalAlignment="Left"
                         Width="100"
                         Height="22"
                         Margin="5,0,5,0"/>
                    <TextBox TextWrapping="Wrap"
                         HorizontalContentAlignment="Left"
                         HorizontalAlignment="Left"
                         Width="150"
                         Height="22"
                         Text="{Binding CreateScoreViewModel.Sum}"
                         Margin="5"/>
                    <TextBlock Text="Sum"
                         TextWrapping="Wrap"
                         HorizontalAlignment="Left"
                         Width="100"
                         Height="22"
                         Margin="5,0,5,0"/>
                    <TextBox TextWrapping="Wrap"
                         HorizontalContentAlignment="Left"
                         HorizontalAlignment="Left"
                         Width="150"
                         Height="22"
                         Text="{Binding CreateScoreViewModel.Period}"
                         Margin="5,0,5,0"/>
                    <TextBlock Text="Period"
                         TextWrapping="Wrap"
                         HorizontalAlignment="Left"
                         Width="100"
                         Height="22"
                         Margin="5,0,5,0"/>
                    <CheckBox Content="Capitalization?"
                        Command="{Binding CreateScoreViewModel.IsCapitalization}"
                        Margin="5,5,5,0"
                              Width="150"/>
                    <WrapPanel Margin="5,0,5,0"
                               HorizontalAlignment="Left">
                        <Button Content="OK" 
                            Command="{Binding CreateScoreViewModel.CreateNewEntityCommand}"
                            HorizontalAlignment="Right" 
                            VerticalAlignment="Bottom" 
                            MinWidth="100" 
                            MinHeight="30" 
                            Margin="5,0,0,0"/>
                        <Button Content="Cancel" 
                            Command="{Binding CreateScoreViewModel.CancelCommand}"
                            HorizontalAlignment="Right" 
                            VerticalAlignment="Bottom" 
                            MinWidth="100" 
                            MinHeight="30" 
                            Margin="10,15,5,0"/>
                    </WrapPanel>

                </WrapPanel>
                <ItemsControl.Style>
                    <Style TargetType="ItemsControl">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CreateScoreViewModel.IsActive}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CreateScoreViewModel.IsActive}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.Style>
            </ItemsControl>
            <!--Send money settings-->
            <ItemsControl Margin="10,50,670,160"
                Background="White"
                Grid.Column="2"
                BorderThickness="2"
                ItemsSource="{Binding SendMoneyViewModel}"
                BorderBrush="Black">
                <WrapPanel>
                    <TextBlock Text="Send money"
                           TextAlignment="Center"
                         Width="250"
                         Height="22"
                         Margin="5"/>
                    <ComboBox Height="22"
                          Width="150"
                          Margin="5,0,5,5"
                          HorizontalAlignment="Left"
                          ItemsSource="{Binding SendMoneyViewModel.SendMoneyModels}"
                          SelectedItem="{Binding SendMoneyViewModel.FromScore}"/>
                    <TextBlock Text="From client"
                         TextWrapping="Wrap"
                         HorizontalAlignment="Left"
                         Width="100"
                         Height="22"
                         Margin="5,0,5,5"/>
                    <ComboBox Height="22"
                          Width="150"
                          Margin="5,0,5,0"
                          HorizontalAlignment="Left"
                          ItemsSource="{Binding SendMoneyViewModel.SendMoneyModels}"
                          SelectedItem="{Binding SendMoneyViewModel.ToScore}"/>
                    <TextBlock Text="To client"
                         TextWrapping="Wrap"
                         HorizontalAlignment="Left"
                         Width="100"
                         Height="22"
                         Margin="5,0,5,0"/>
                    <TextBox TextWrapping="Wrap"
                         HorizontalContentAlignment="Left"
                         HorizontalAlignment="Left"
                         Width="150"
                         Height="22"
                         Text="{Binding SendMoneyViewModel.Sum}"
                         Margin="5"/>
                    <TextBlock Text="Sum"
                         TextWrapping="Wrap"
                         HorizontalAlignment="Left"
                         Width="100"
                         Height="22"
                         Margin="5,0,5,0"/>
                   <WrapPanel Margin="5,0,5,0"
                         HorizontalAlignment="Left">
                        <Button Content="OK" 
                            Command="{Binding SendMoneyViewModel.ExecuteSendMoney}"
                            HorizontalAlignment="Right" 
                            VerticalAlignment="Bottom" 
                            MinWidth="100" 
                            MinHeight="30" 
                            Margin="5,0,0,0"/>
                        <Button Content="Cancel" 
                            Command="{Binding SendMoneyViewModel.CancelCommand}"
                            HorizontalAlignment="Right" 
                            VerticalAlignment="Bottom" 
                            MinWidth="100" 
                            MinHeight="30" 
                            Margin="10,15,5,0"/>
                    </WrapPanel>

                </WrapPanel>
                <ItemsControl.Style>
                    <Style TargetType="ItemsControl">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SendMoneyViewModel.IsActive}" 
                                         Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SendMoneyViewModel.IsActive}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.Style>
            </ItemsControl>

        </Grid>
    </DockPanel>
</Window>
